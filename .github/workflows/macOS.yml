name: macOS workflow

on:
  push:
    branches: [ deploy_* ]
  workflow_dispatch:

jobs:
  build:
    name: Build macOS dmg
    runs-on: macos-10.15

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: |
          set -x

          ## prepare system
          # for 0.2.X
          brew install automake sdl sdl_image dylibbundler create-dmg 
          # for 0.4
          #brew install automake sdl2 sdl2_image sdl2_mixer protobuf-c glew boost ftgl dylibbundler create-dmg 
          
          ## import build settings
          . ./INFO

          ## get source
          wget "${TARBALL}" -O source.tbz
          (mkdir source; cd source; tar -xjf ../source.tbz; mv *${VERSION}* ../armagetronad)
          rmdir source
          rm -f source.tbz

          ## maybe speed up testing
          export ARMAGETRONAD_FAKERELEASE=true

          ## build client
          mkdir client
          (cd client && ../armagetronad/configure --disable-sysinstall --disable-etc --prefix=/usr && make -j `nproc`)
          (cd client && bash src/macosx/build_bundle.sh `pwd`/../release)

          ## build server
          mkdir server
          (cd server && ../armagetronad/configure --disable-sysinstall --disable-etc --prefix=/usr --disable-glout && make -j `nproc`)
          (cd server && bash src/macosx/build_bundle.sh `pwd`/../release)

          ## prepare retrocycles
          cp -a armagetronad retrocycles
          sed < armagetronad/src/engine/ePlayer.cpp > retrocycles/src/engine/ePlayer.cpp -e "s/pr0n/cat videos/"
          for f in src/tron/gLogo.cpp Makefile.am Makefile.in; do sed < armagetronad/$f > retrocycles/$f -e "s,textures/title.jpg,textures/title.png,"; done
          git clone https://gitlab.com/armagetronad/steam-art
          cp steam-art/good/title.png retrocycles/textures/
          (cd retrocycles; ./bootstrap.sh)

          ## build retrocycles
          mkdir retrocycles_client
          (cd retrocycles_client && progname="${PROGNAME_RC}" progtitle="${PROGTITLE_RC}" ../retrocycles/configure --disable-sysinstall --disable-etc --prefix=/usr && make -j `nproc`)
          (cd retrocycles_client && bash src/macosx/build_bundle.sh `pwd`/../release)

          mkdir -p release
          echo "fake" > release/fake
          set +x
      - name: Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macOS images
          path: release
      - name: SSH Agent
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_DEPLOY }}
      - name: Deploy
        run: |
          . ./INFO
          set -x
          
          mkdir -p ~/.ssh
          cat known_hosts >> ~/.ssh/known_hosts

          rsync -r release/ "${UPLOAD}"
          echo "done" > release/mac_is_done.txt
          rsync release/mac_is_done.txt "${UPLOAD}"/mac_is_done.txt

          set +x